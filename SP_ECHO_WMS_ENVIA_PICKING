 CREATE OR ALTER PROCEDURE DBO.SP_ECHO_WMS_ENVIA_PICKING(@PEDIDO VARCHAR(12), @EXIBE_PRINT BIT = 0, @RETORNA_STATUS BIT = 0)
AS
BEGIN 
	SET NOCOUNT ON

	DECLARE @ID_CONTROLE BIGINT,
			@ID_VOLO BIGINT,
			@FILIAL VARCHAR(25),
			@NOME_CLIFOR VARCHAR(25),
			@EMISSAO DATETIME,
			@COD_CLIFOR VARCHAR(6),
			@CGC_CPF_FILIAL VARCHAR(14),
			@CGC_CPF_CLI VARCHAR(14),
			@ERRO_EXCEPTION VARCHAR(MAX),
			@STEP INT,
			@STATUS_CONCLUSAO			INT,
			@MSG_CONCLUSAO				VARCHAR(254)

	SET @STEP = 1
	SELECT TOP 1 
			@FILIAL = VENDAS_PROD_EMBALADO.FILIAL, 
			@NOME_CLIFOR = VENDAS_PROD_EMBALADO.NOME_CLIFOR,
			@EMISSAO = VENDAS.EMISSAO,
			@COD_CLIFOR = CADASTRO_CLI_FOR.COD_CLIFOR,
			@CGC_CPF_FILIAL = FI.CGC_CPF,
			@CGC_CPF_CLI = CADASTRO_CLI_FOR.CGC_CPF
	FROM DBO.VENDAS_PROD_EMBALADO WITH(NOLOCK)
	JOIN DBO.VENDAS WITH(NOLOCK) ON
		VENDAS_PROD_EMBALADO.PEDIDO = VENDAS.PEDIDO
	JOIN DBO.CADASTRO_CLI_FOR WITH(NOLOCK) ON
		VENDAS_PROD_EMBALADO.NOME_CLIFOR = CADASTRO_CLI_FOR.NOME_CLIFOR
	JOIN CADASTRO_CLI_FOR FI WITH(NOLOCK) ON
		VENDAS.FILIAL = FI.NOME_CLIFOR
	WHERE VENDAS_PROD_EMBALADO.CAIXA_FECHADA = 1 AND VENDAS_PROD_EMBALADO.PEDIDO = @PEDIDO

	IF(ISNULL(@FILIAL,'')) <>'' 
	BEGIN
		
		SET @STEP = 2
		--> Gera Controle
		IF (SELECT COUNT(*) FROM DBO.TB_ECHO_WMS_CONTROLE WITH(NOLOCK) WHERE ORIGEM = 'PEDIDO' AND CHAVE = @PEDIDO) = 0 
		BEGIN
			SET @STEP = 3
			INSERT INTO
				DBO.TB_ECHO_WMS_CONTROLE
				(ORIGEM,
				CHAVE,
				STATUS,
				STATUS_ANTERIOR,
				DATA_HORA_GERACAO,
				DATA_HORA_UPDATE,
				USUARIO,
				HOST,
				APP_EXEC,
				FILIAL,
				CLIENTE)
			SELECT 
				ORIGEM				= 'PEDIDO',
				CHAVE				= @PEDIDO,
				STATUS				= 0 ,
				STATUS_ANTERIOR		= 0 ,
				DATA_HORA_GERACAO	= GETDATE(),
				DATA_HORA_UPDATE	= GETDATE(),
				USUARIO				= SUSER_NAME(),
				HOST				= HOST_NAME(),
				APP_EXEC			= APP_NAME(),
				FILIAL				=  @FILIAL,
				CLIENTE				= @NOME_CLIFOR

			SET @ID_CONTROLE = @@IDENTITY
		END
		ELSE
		BEGIN
			SET @STEP = 4
			SELECT @ID_CONTROLE = ID FROM DBO.TB_ECHO_WMS_CONTROLE WITH(NOLOCK) WHERE ORIGEM = 'PEDIDO' AND CHAVE = @PEDIDO
			
			DELETE FROM TB_ECHO_WMS_CONTROLE_LOGS WHERE ID = @ID_CONTROLE
		END

		BEGIN TRY
			IF @EXIBE_PRINT = 1 PRINT('Gera Picking')
			
			BEGIN TRAN
			
			SET @STEP = 5
			INSERT INTO
				[VOLO].[dbo].IT4_WMS_DOCUMENTO
				(Documento,
				Serie,
				Filial,
				Cliente_Ou_Fornecedor,
				Data,
				Origem,
				TIPO,
				Enviado,
				Retorno,
				Caixa,
				Cancelamento,
				Cancelado,
				Peso,
				Volumes,
				msg_error,
				CHAVE_NFE,
				DATA_ENVIO_FATURAMENTO,
				TICKET,
				XML_FATURAMENTO,
				TICKET_FATURAMENTO,
				CGC_CPF,
				NF_SAIDA,
				romaneio_entrada,
				CAIXAS_VOLO,
				DATA_EXPEDICAO)
			SELECT 
				Documento					= @PEDIDO,
				Serie						= '999',
				Filial						= @FILIAL,
				Cliente_Ou_Fornecedor		= @COD_CLIFOR,
				Data						= @EMISSAO,
				Origem						= 'P',		-- FIXO
				TIPO						= 'NORM',	-- FIXO
				Enviado						= NULL,		-- NULLABLE
				Retorno						= NULL,		-- NULLABLE
				Caixa						= NULL,		-- NULLABLE
				Cancelamento				= NULL,		-- NULLABLE
				Cancelado					= NULL,		-- NULLABLE
				Peso						= NULL,		-- NULLABLE
				Volumes						= NULL,		-- NULLABLE
				msg_error					= NULL,		-- NULLABLE
				CHAVE_NFE					= NULL,		-- NULLABLE
				DATA_ENVIO_FATURAMENTO		= NULL,		-- NULLABLE
				TICKET						= NULL,		-- NULLABLE
				XML_FATURAMENTO				= NULL,		-- NULLABLE
				TICKET_FATURAMENTO			= NULL,		-- NULLABLE
				CGC_CPF						= @CGC_CPF_CLI,		-- NULLABLE
				NF_SAIDA					= NULL,		-- NULLABLE
				romaneio_entrada			= NULL,		-- NULLABLE
				CAIXAS_VOLO					= NULL,		-- NULLABLE
				DATA_EXPEDICAO				= NULL		-- NULLABLE
			
			SET @ID_VOLO = @@IDENTITY

			SET @STEP = 6
			INSERT INTO
				[VOLO].DBO.IT4_WMS_DOCUMENTO_ITEM
				(idControle,
				IdItem,
				Codigo_Barra,
				Descricao,
				Qtde,
				QtdeRetorno,
				IDLote,
				TICKET)
			SELECT
				idControle = @ID_VOLO,
				IdItem = ROW_NUMBER() OVER(ORDER BY VP.SEQUENCIAL_DIGITACAO ASC),
				Codigo_Barra = B.CODIGO_BARRA,
				Descricao = P.DESC_PROD_NF,
				Qtde = A.QTDE_EMBALADA,
				QtdeRetorno = NULL,
				IDLote = NULL,
				TICKET = NULL
			FROM DBO.VENDAS_PROD_EMBALADO A WITH(NOLOCK) 
			JOIN DBO.VENDAS_PRODUTO VP WITH(NOLOCK) ON
				A.PEDIDO = VP.PEDIDO AND
				A.PRODUTO = VP.PRODUTO AND
				A.COR_PRODUTO = VP.COR_PRODUTO AND
				A.ENTREGA = VP.ENTREGA AND
				A.ITEM_PEDIDO = VP.ITEM_PEDIDO
			JOIN PRODUTOS_BARRA B WITH(NOLOCK) ON
				A.PRODUTO = B.PRODUTO AND
				A.COR_PRODUTO = B.COR_PRODUTO AND
				B.CODIGO_BARRA_PADRAO  = 1 AND 
				B.TIPO_COD_BAR = 1 
				AND B.INATIVO = 0 
			JOIN PRODUTOS P WITH(NOLOCK) ON
				A.PRODUTO = P.PRODUTO
			WHERE A.PEDIDO = @PEDIDO AND A.CAIXA_FECHADA = 1

			UPDATE DBO.TB_ECHO_WMS_CONTROLE 
				SET  
					 STATUS_ANTERIOR	= STATUS
					,STATUS				= 3 
					,DATA_HORA_UPDATE	= GETDATE()
					,USUARIO			= SUSER_NAME()
					,APP_EXEC			= APP_NAME()
					,HOST				= HOST_NAME()
					,DATA_PICKING_ENVIO = CONVERT(DATE, GETDATE())
			WHERE ID = @ID_CONTROLE

			SET @STATUS_CONCLUSAO = 3
			SET @MSG_CONCLUSAO = 'SUCESSO'

			INSERT INTO 
				DBO.TB_ECHO_WMS_CONTROLE_STATUS
				(ID,
				CHAVE,
				STATUS,
				DATA_HORA)
			SELECT 
				ID = @ID_CONTROLE,
				CHAVE = @PEDIDO,
				STATUS = 3,
				DATA_HORA = GETDATE()

			COMMIT TRAN
		END TRY
		BEGIN CATCH
			SET @ERRO_EXCEPTION = ERROR_MESSAGE()

			ROLLBACK TRAN

			INSERT INTO
				DBO.TB_ECHO_WMS_CONTROLE_LOGS
				(ID,
				ITEM,
				ORIGEM,
				DETALHES)
			SELECT
				ID = @ID_CONTROLE,
				ITEM = 1,
				ORIGEM = 'SP_ECHO_WMS_ENVIA_PICKING',
				DETALHES = 'Step: '+CONVERT(VARCHAR(2),@STEP)+' - '+@ERRO_EXCEPTION

			UPDATE TB_ECHO_WMS_CONTROLE
				SET STATUS_ANTERIOR		= CASE WHEN STATUS = 9 THEN STATUS_ANTERIOR ELSE STATUS END,
					STATUS				= 9,
					DATA_HORA_UPDATE	= GETDATE(),
					USUARIO				= SUSER_NAME(),
					HOST				= HOST_NAME(),
					APP_EXEC			= APP_NAME()
			WHERE ID = @ID_CONTROLE

			INSERT INTO 
				DBO.TB_ECHO_WMS_CONTROLE_STATUS
				(ID,
				CHAVE,
				STATUS,
				DATA_HORA)
			SELECT 
				ID = @ID_CONTROLE,
				CHAVE = @PEDIDO,
				STATUS = 9,
				DATA_HORA = GETDATE()

			SET @STATUS_CONCLUSAO = 9
			SET @MSG_CONCLUSAO = @ERRO_EXCEPTION

		END CATCH

	END

	IF @RETORNA_STATUS = 1
	SELECT STATUS = @STATUS_CONCLUSAO,	MENSAGEM = @MSG_CONCLUSAO	
END
